# Global env (shared safely across all steps)
env:
  AGENT_QUEUE: "corpinfra-test"
  AWS_REGION: "us-west-2"
  AWS_SDK_LOAD_CONFIG: "true"
  BUILDKITE_AGENT_IMAGE: "811290012474.dkr.ecr.us-west-2.amazonaws.com/agent:latest"
  BUILDKITE_ARTIFACT_UPLOAD_DESTINATION: "s3://dd-buildkite-artifacts-corpinfra-test"
  BUILDKITE_S3_ACL: "private"
  GIT_CREDENTIAL_SECRET: "my-git-credentials"
  KANIKO_IMAGE: "839591177169.dkr.ecr.us-west-2.amazonaws.com/kaniko:latest"
  KRANE_IMAGE: "839591177169.dkr.ecr.us-west-2.amazonaws.com/krane:latest"
  MANIFEST_TOOL_IMAGE: "839591177169.dkr.ecr.us-west-2.amazonaws.com/manifest-tool:latest"
  NODE_SELECTOR: "buildkite-it-corpinfra-default"
  SCAN_SEVERITY: "CRITICAL"
  SCRATCH_VOLUME_PATH: "/scratch"
  SERVICE_ACCOUNT_NAME: "agent-stack-k8s-controller"
  TOLERATION: "it-corpinfra.doordash.com/buildkite"
  TRIVY_IMAGE: "811290012474.dkr.ecr.us-west-2.amazonaws.com/trivy:latest"

# Reusable step definitions (mapping anchors)
build_step: &build_step
  label: "Build Image - matrix"
  key: "build"
  if_changed: "app/**"
  matrix:
    - "amd64"
    - "arm64"
  agents:
    queue: ${AGENT_QUEUE}
  plugins:
    - kubernetes:
        checkout:
          gitCredentialsSecret:
            gitCredentialsSecret:
              # some clusters want nested structure; keep the canonical one:
            secretName: ${GIT_CREDENTIAL_SECRET}
        podSpec:
          serviceAccountName: ${SERVICE_ACCOUNT_NAME}
          nodeSelector:
            kubernetes.io/arch: "matrix"
          tolerations:
            - effect: NoSchedule
              key: ${TOLERATION}
              operator: Exists
          containers:
            - image: ${KANIKO_IMAGE}
              command:
                - "executor --dockerfile=${DOCKERFILE_LOCATION} --context=${BUILD_CONTEXT} --destination=${ECR_REPO}:${BUILDKITE_COMMIT}-matrix --no-push --tar-path=${BUILDKITE_COMMIT}-matrix"
        extraVolumeMounts: []
  artifact_paths:
    - "${BUILDKITE_COMMIT}-*"

scan_step: &scan_step
  label: "Scan Image - matrix"
  key: "scan"
  if_changed: "app/**"
  depends_on:
    - "build"
  matrix:
    - "amd64"
    - "arm64"
  agents:
    queue: ${AGENT_QUEUE}
  plugins:
    - kubernetes:
        checkout:
          gitCredentialsSecret:
            secretName: ${GIT_CREDENTIAL_SECRET}
        podSpec:
          serviceAccountName: ${SERVICE_ACCOUNT_NAME}
          tolerations:
            - effect: NoSchedule
              key: ${TOLERATION}
              operator: Exists
          containers:
            - image: ${BUILDKITE_AGENT_IMAGE}
              command:
                - "buildkite-agent artifact download ${BUILDKITE_COMMIT}-matrix ${SCRATCH_VOLUME_PATH}"
            - image: ${TRIVY_IMAGE}
              command:
                - "trivy image --disable-telemetry --severity ${SCAN_SEVERITY} --ignore-status not_affected,will_not_fix --exit-code 187 --input ${SCRATCH_VOLUME_PATH}/${BUILDKITE_COMMIT}-matrix"
          volumes:
            - name: scratch-volume
              emptyDir: {}
        extraVolumeMounts:
          - name: scratch-volume
            mountPath: ${SCRATCH_VOLUME_PATH}

push_step: &push_step
  label: "Push Image - matrix"
  key: "push"
  if_changed: "app/**"
  depends_on:
    - "scan"
  if: build.branch == 'main'
  matrix:
    - "amd64"
    - "arm64"
  agents:
    queue: ${AGENT_QUEUE}
  plugins:
    - kubernetes:
        checkout:
          gitCredentialsSecret:
            secretName: ${GIT_CREDENTIAL_SECRET}
        podSpec:
          serviceAccountName: ${SERVICE_ACCOUNT_NAME}
          tolerations:
            - effect: NoSchedule
              key: ${TOLERATION}
              operator: Exists
          containers:
            - image: ${BUILDKITE_AGENT_IMAGE}
              command:
                - "buildkite-agent artifact download ${BUILDKITE_COMMIT}-matrix ${SCRATCH_VOLUME_PATH}"
            - image: ${KRANE_IMAGE}
              command:
                - "krane push ${SCRATCH_VOLUME_PATH}/${BUILDKITE_COMMIT}-matrix ${ECR_REPO}:${BUILDKITE_COMMIT}-matrix"
              env:
                - name: BUILDKITE_SHELL
                  value: "/busybox/sh -c"
          volumes:
            - name: scratch-volume
              emptyDir: {}
        extraVolumeMounts:
          - name: scratch-volume
            mountPath: ${SCRATCH_VOLUME_PATH}

index_step: &index_step
  label: "Create Multi-arch Index"
  key: "index-upload"
  if_changed: "app/**"
  depends_on:
    - "push"
  if: build.branch == 'main'
  agents:
    queue: ${AGENT_QUEUE}
  plugins:
    - kubernetes:
        checkout:
          gitCredentialsSecret:
            secretName: ${GIT_CREDENTIAL_SECRET}
        podSpec:
          serviceAccountName: ${SERVICE_ACCOUNT_NAME}
          tolerations:
            - effect: NoSchedule
              key: ${TOLERATION}
              operator: Exists
          containers:
            - image: ${MANIFEST_TOOL_IMAGE}
              command:
                - >
                  echo '{"credsStore":"ecr-login"}' > ${SCRATCH_VOLUME_PATH}/docker_config.json &&
                  manifest-tool --docker-cfg ${SCRATCH_VOLUME_PATH}/docker_config.json push from-args
                  --platforms linux/amd64,linux/arm64
                  --template ${ECR_REPO}:${BUILDKITE_COMMIT}-ARCH
                  --target ${ECR_REPO}:`date +%Y%m%d`-${BUILDKITE_COMMIT}
          volumes:
            - name: scratch-volume
              emptyDir: {}
        extraVolumeMounts:
          - name: scratch-volume
            mountPath: ${SCRATCH_VOLUME_PATH}

# Steps: one service ("app"). Duplicate this group for more services, changing glob and env.
steps:
  - group: "app service build and ship"
    steps:
      - <<: *build_step
        env:
          BUILD_CONTEXT: "./app"
          DOCKERFILE_LOCATION: "./app/Dockerfile"
          ECR_REPO: "811290012474.dkr.ecr.us-west-2.amazonaws.com/app"

      - <<: *scan_step
        env:
          BUILD_CONTEXT: "./app"
          DOCKERFILE_LOCATION: "./app/Dockerfile"
          ECR_REPO: "811290012474.dkr.ecr.us-west-2.amazonaws.com/app"

      - <<: *push_step
        env:
          BUILD_CONTEXT: "./app"
          DOCKERFILE_LOCATION: "./app/Dockerfile"
          ECR_REPO: "811290012474.dkr.ecr.us-west-2.amazonaws.com/app"

      - <<: *index_step
        env:
          BUILD_CONTEXT: "./app"
          DOCKERFILE_LOCATION: "./app/Dockerfile"
          ECR_REPO: "811290012474.dkr.ecr.us-west-2.amazonaws.com/app"

