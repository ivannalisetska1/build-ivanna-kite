steps:
  - label: "Install Dependencies"
    command: |
      echo "Installing Node.js dependencies..."
      npm install
    agents:
      queue: "default"

  - label: "Run Tests"
    command: |
      echo "Running tests..."
      npm test
    agents:
      queue: "default"

  - label: "Build Docker Image with Kaniko"
    command: |
      echo "Setting up ECR authentication..."
      
      # Get ECR login token
      aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
      
      # Create Kaniko config for ECR
      mkdir -p /tmp/kaniko
      cat > /tmp/kaniko/config.json << EOF
      {
        "auths": {
          "$ECR_REGISTRY": {
            "auth": "$(echo -n AWS:$(aws ecr get-login-password --region us-east-1) | base64 -w 0)"
          }
        }
      }
      EOF
      
      echo "Building image with Kaniko..."
      docker run \
        --rm \
        -v $(pwd):/workspace \
        -v /tmp/kaniko:/kaniko/.docker \
        gcr.io/kaniko-project/executor:latest \
        --context=/workspace \
        --dockerfile=/workspace/Dockerfile \
        --destination=$ECR_REGISTRY/buildkite-kaniko-demo:latest \
        --destination=$ECR_REGISTRY/buildkite-kaniko-demo:${BUILDKITE_BUILD_NUMBER} \
        --build-arg=BUILDKITE_BUILD_NUMBER=${BUILDKITE_BUILD_NUMBER} \
        --label=buildkite.build.number=${BUILDKITE_BUILD_NUMBER} \
        --label=buildkite.build.url=${BUILDKITE_BUILD_URL} \
        --label=buildkite.pipeline.slug=${BUILDKITE_PIPELINE_SLUG} \
        --cache=true \
        --cache-ttl=24h \
        --cleanup \
        --verbosity=info
    agents:
      queue: "default"
    env:
      ECR_REGISTRY: "your-account.dkr.ecr.us-east-1.amazonaws.com"

  - label: "Verify Image in ECR"
    command: |
      echo "Verifying image was pushed to ECR..."
      aws ecr describe-images --repository-name buildkite-kaniko-demo --region us-east-1
    agents:
      queue: "default"
